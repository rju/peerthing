<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE architecture SYSTEM "./Architecture.dtd">

<architecture name="Simple">
	<node name="peer">
		<variable type="item" name="knownPeer" log="no"/>
		<behaviour startTask="main">
			<task name="main" startState="notConnected" x="46" y="132">
				<state name="notConnected" x="30" y="249">
					<transition event="connectRequest" nextState="connected">
						<action name="connectionStateChange">
							<param name="state" value="online"/>
						</action>
						<action name="insert">
							<param name="source"
								select="../../node[@type='server'][1]/@id"/>
							<param name="destination" select="../knownPeer"/>
						</action>
						<action name="sendMessage">
							<param name="destination" select="../knownPeer"/>
							<param name="name" value="connect"/>
						</action>
					</transition>
				</state>
				<state name="connected" x="368" y="274">
					<transition event="disconnectRequest"
						nextState="notConnected">
						<action name="log">
							<param name="host" select="../@type"/>
							<param name="event" value="disconnect"/>
						</action>
						<action name="connectionStateChange">
							<param name="state" value="offline"/>
						</action>
					</transition>
					<transition event="searchFile" startTask="searchTask">
						<action name="sendMessage">
							<param name="name" value="searchRequest"/>
							<param name="destination" select="../knownPeer"/>
							<param name="resource"
								select="pt:chooseResource(pt:random())"/>
						</action>
					</transition>
					<transition event="searchRequest">
						<condition>
							<case expr="../resource/@id=./message/resource/resourceDefinition/@id">
								<action name="sendMessage">
									<param name="name" value="resourceAvailable"/>
									<param name="destination" select="./session[@id=../message/@session]"/>
									<param name="resource" select="./message/resource/resourceDefinition"/>
									<param name="initiator" select="./message/initiator"/>
								</action>
							</case>
							<default>
								<action name="sendMessage">
									<param name="name" value="resourceNotAvailable"/>
									<param name="destination" select="./message/@source"/>
								</action>
							</default>
						</condition>
					</transition>
					<transition event="getResource">
						<action name="sendMessage">
							<param name="name" value="transmitResource"/>
							<param name="resource" select="./message/resource"/>
							<param name="size" value="100000"/>
							<param name="destination" select="./message/@source"/>
						</action>
					</transition>
				</state>
			</task>
			<task name="searchTask" startState="search" x="362" y="48">
				<state name="search" x="108" y="52">
					<transition event="searchAnswer" nextState="search"
						endTask="yes">
						<action name="sendMessage">
							<param name="host" select="../@id"/>
							<param name="name" value="getResource"/>
							<param name="destination" select="./message/node"/>
							<param name="resource" select="./message/resource"/>
						</action>
					</transition>
				</state>
			</task>
		</behaviour>
	</node>
	<node name="server">
		<variable name="peerList" type="list/id" log="no"/>
		<behaviour startTask="server_main">
			<task name="server_main" startState="server_idle" x="590" y="20">
				<state name="server_idle" x="600" y="128">
					<initialize>
						<action name="connectionStateChange">
							<param name="state" value="online"/>
						</action>
					</initialize>
					<transition event="connect" nextState="server_idle">
						<action name="insert">
							<param name="source" select="pt:newVar('peer',./message/@source)"/>
							<param name="destination" select="../peerList"/>
						</action>
					</transition>
					<transition event="searchRequest" nextState="server_idle">
						<action name="sendMessage">
							<param name="destination" select="../peerList/peer[.!=$context/message/source]"/>
							<param name="name" select="./message/name"/>
							<param name="resource" select="./message/resource"/>
							<param name="initiator" select="./message/source"/>
						</action>
					</transition>
					<transition event="resourceAvailable" nextState="server_idle">
						<action name="sendMessage">
							<param name="name" value="searchAnswer"/>
							<param name="node" select="./message/source"/>
							<param name="resource" select="./message/resource"/>
							<param name="destination" select="./session[@id=../message/@session]"/>
							<param name="initiator" select="./message/initiator"/>
						</action>
					</transition>
					<transition event="resourceNotAvailable" nextState="server_idle">
						<action name="log">
							<param name="host" select="../@type"/>
							<param name="event" value="resourceNotAvailable"/>
							<param name="name" select="./message/name"/>
							<param name="resource" select="./message/resource"/>
						</action>
					</transition>
				</state>
			</task>
		</behaviour>
	</node>
</architecture>
