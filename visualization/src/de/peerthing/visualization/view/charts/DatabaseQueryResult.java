package de.peerthing.visualization.view.charts;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import org.eclipse.core.resources.IFile;

/**
 * This class holds the data that is generated by
 * a query on one database file.
 * 
 * @author Michael Gottschalk
 *
 */
public class DatabaseQueryResult {
    private Hashtable<Integer, SimulationRunQueryResult> data = 
        new Hashtable<Integer, SimulationRunQueryResult>();
    private List<Integer> runNumbers = new ArrayList<Integer>();
    private IFile dbFile;
    /**
     * The minimum and maximum values for the X axis
     * of the data of all simulation runs. This is needed
     * for computing reasonable interval lengths.
     * May be null if there are no values for the x axis.
     */
    private Double minXValue, maxXValue;
    
    public DatabaseQueryResult(IFile dbFile) {
        this.dbFile = dbFile;
    }
    
    public IFile getDBFileName() {
        return dbFile;
    }
    
    public String getShortDBName() {
        String f = dbFile.getName();
        return f.substring(0, f.lastIndexOf('.'));
    }
    
    
    public void addSimulationRunData(int run, SimulationRunQueryResult res) {
        data.put(run, res);
        runNumbers.add(run);
    }
    
    public List<Integer> getIncludedSimulationRuns() {
        return runNumbers;
    }
    
    public int getRunNumber(int runInTheList) {
        return runNumbers.get(runInTheList);
    }
    
    public SimulationRunQueryResult getDataForRun(int run) {
        return data.get(run);
    }
    
    public void print() {
        for (Integer run : getIncludedSimulationRuns()) {
            System.out.println("Simulation run "+ run+ ":");
            data.get(run).print();
        }
    }

    /**
     * Returns the maximum x axis value for the data
     * of all included simulation runs. 
     * 
     */
    public Double getMaxXValue() {
        return maxXValue;
    }

    public void setMaxXValue(Double maxXValue) {
        this.maxXValue = maxXValue;
    }

    /**
     * Returns the minimum x axis value for the data
     * of all included simulation runs. 
     * 
     */
    public Double getMinXValue() {
        return minXValue;
    }

    public void setMinXValue(Double minXValue) {
        this.minXValue = minXValue;
    }
}
